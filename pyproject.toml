[tool.poetry]
name = "book-review-platform"
version = "0.1.0"
description = "The collaborative hub for literary enthusiasts"
authors = []
license = "Unlicense"
readme = "README.md"
packages = [{ include = "book_review" }]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.7.0"
aiohttp = { extras = ["speedups"], version = "^3.9.5" }
argon2-cffi = "^23.1.0"
fastapi = "^0.110.2"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
dynaconf = "^3.2.5"
rich = "^13.7.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.7"
yoyo-migrations = "^8.2.0"
setuptools = "^69.5.1"
mypy = "^1.9.0"
pytest = "^8.1.1"
pytest-subtests = "^0.12.1"
bandit = "^1.7.8"
pytest-asyncio = "^0.23.6"

[tool.poetry.scripts]
serve = "book_review.main:main"
test = "tools:test"
format = "tools:format"
lint = "tools:lint"
typecheck = "tools:typecheck"
check = "tools:check"
security = "tools:security"

migrations-apply = "tools:migrations_apply"
migrations-rollback = "tools:migrations_rollback"
migrations-list = "tools:migrations_list"
migrations-new = "tools:migrations_new"

[tool.mypy]
strict = true
plugins = ["pydantic.mypy"]
ignore_missing_imports = true

[tool.ruff.lint]
extend-select = ["I"]

[tool.bandit]
targets = ["book_review"]
skips = ["B101"]

[tool.pytest.ini_options]
testpaths = ["tests", "integration"]
filterwarnings = ["ignore::DeprecationWarning:yoyo.*:"]
# asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
